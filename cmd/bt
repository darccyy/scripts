#!/bin/sh
#~~~ connect or disconnect a particular bluetooth device

mac='40:DE:17:43:2F:49'

# Start scanning for all devices, until given MAC address is found
scan_and_wait() {
    bluetoothctl scan on &
    while ! bluetoothctl devices | grep -q "$mac"; do
        sleep 1
    done
    bluetoothctl scan off
    killall bluetoothctl
}
# Returns successful exit if bluetooth device is connected
is_connected() {
    bluetoothctl info $mac | grep -q 'Connected: yes'
}
# Returns successful exit if bluetooth is powered on (enabled)
is_power_on() {
    bluetoothctl show | grep -q 'Powered: yes'
}

# Run subcommand
case "$1" in
    'c'|'connect')
        is_connected && exit 0 # already connected
        # pactl set-sink-volume @DEFAULT_SINK@ 0%
        bluetoothctl power on
        scan_and_wait
        bluetoothctl connect $mac
        ;;

    'd'|'disconnect')
        bluetoothctl disconnect $mac
        bluetoothctl power off
        # Mute audio when bluetooth disconnected
        sleep 1
        pactl set-sink-volume @DEFAULT_SINK@ 0%
        ;;

    'mac') echo $mac ;;

    'status') is_connected ;;
    'power')  is_power_on ;;

    'display')
        if ! is_power_on;    then echo '󰂲' # power off
        elif ! is_connected; then echo '' # disconnected
                             else echo '' # connected
        fi ;;

    *)
        echo 'bt: please provide valid subcommand'
        echo 'usage: [ connect | disconnect | mac | status | power | display ]'
        ;;
esac

