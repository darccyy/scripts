#!/bin/sh
#~~~ custom version of dmenu_run to use aliases

# Set aliases
# Priority before $path
alias lw='librewolf'
alias lo='libreoffice'
alias th='thunar'
alias ff='firefox'
alias kp='keepassxc'
alias pvz='wine start /unix "/home/darcy/.wine/drive_c/Program Files/Plants vs Zombies/PlantsVsZombies.exe"'
alias tel='telegram-desktop'
alias cam='guvcview'

# Set paths to look for executables
# Similar to $PATH, but more narrow
# Order is priority
path="
$HOME/scripts/cmd
$HOME/.cargo/bin
/usr/bin
/bin
"

# Path to cache executables
# Because looking for files in $path is SLOW
cache_file="$HOME/.cache/dmenu-custom"
cache_file_temp="/tmp/dmenu-custom"

# Create cache file if does not exist
# Or manual refresh is requested
if [ ! -f "$cache_file" ] || [ "$1" = 'refresh' ]; then
    echo "Updating cache..."

    # Add aliases to dmenu options
    # cmds=""
    alias | while IFS= read -r alias; do
        cmd="${alias%%=*}"
        echo "$cmd" >> "$cache_file_temp"
    done

    # Add commands from $PATH
    for folder in $path; do
        if [ ! -d "$folder" ]; then
            continue
        fi
        for file in "$folder"/*; do
            if [ ! -x "$file" ]; then
                continue
            fi
            cmd=$(basename "$file") 
            echo "$cmd" >> "$cache_file_temp"
        done
    done

    # Move to real cache location
    # Remove duplicates
    awk '!seen[$0]++' "$cache_file_temp" > "$cache_file" || exit 1

    # Exit only if manual refresh was requsted
    # Not if creating cache automatically due to missing file
    if [ "$1" = 'refresh' ]; then
        exit
    fi
fi

# Read cache file
cmds=$(cat "$cache_file")

# Add paths to $PATH for this script
# For `eval` to run
for path in $path; do
    PATH="$PATH:$path"
done

# Use dmenu to ask which command to run
run=$(echo "$cmds" | dmenu -b -p 'ï„ ')
# `eval` is needed, to run aliases as well
eval "$run"
