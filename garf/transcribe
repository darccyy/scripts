#!/bin/sh

posts="$(~/scripts/cmd/garf +dir 'posts'    || exit 1)"

cd "$posts" || exit 1

post="$1"

if [ ! "$post" ]; then
    # Get first NOT-OLD post id with no transcript file
    for i in *; do
        if [ -f "$i/esperanto.svg" ] && [ ! -f "$i/transcript" ]; then
            post="$i"
            break
        fi
    done

    if [ -z "$post" ]; then
        # Get first post id with no transcript file
        for i in *; do
            if [ ! -f "$i/transcript" ]; then
                post="$i"
                break
            fi
        done

        # No post to transcribe!
        if [ -z "$post" ]; then
            echo 'garf transcribe: no posts with missing trascript file'
            exit 0
        fi
    fi

    echo "Post id: $post"
fi

# Invalid post id
if [ ! -d "$post" ]; then
    echo 'garf transcript: no post with that id'
    exit 1
fi

cd "$post" || exit 1

temp_file="/tmp/garf-transcript-$post"

# Template file contents: 3 panels or 7 for Sundays
number="$(echo "$post" | sed 's/^0*//')"
if [ "$(((number + 1) % 7))" -eq 0 ]; then
    file_contents="$(printf -- '---\n---\n---\n---\n---\n---')"
else
    file_contents="$(printf -- '---\n---')"
fi

# Show image, kill previous instance
pkill -f -c 'garf-transcribe' > /dev/null
nsxiv 'esperanto.png' 'english.png' --class 'garf-transcribe' &

# Move image window, based on monitor count
focused_window=$(i3-msg -t get_tree | jq -r '.. | select(.focused?) | .id')
sleep 0.1
if [ "$(~/scripts/cmd/monitors)" = 2 ]; then
    i3-msg "[instance=garf-transcribe] move to output HDMI-1" > /dev/null 2>&1
else
    for i in $(seq 0 3); do
        i3-msg "[instance=garf-transcribe] move left, resize set 50 ppt" > /dev/null 2>&1
    done
fi
i3-msg "[con_id=${focused_window}] focus" > /dev/null 2>&1

# Open file
echo "$file_contents" > "$temp_file"
nvim "$temp_file"

# Kill image
pkill -f -c 'garf-transcribe' > /dev/null

# Confirm, if file changed, and not interrupted
if [ "$(cat "$temp_file")" = "$file_contents" ]; then
    echo 'No changes made.'
    exit 0
fi
printf 'Save transcript file? (CTRL-C to cancel) '
read -r

mv "$temp_file" 'transcript'
echo 'Saved transcript file.'

