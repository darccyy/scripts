#!/bin/sh

src="$(  ~/scripts/cmd/garf +dir 'src'   || exit 1)"
find="$( ~/scripts/cmd/garf +dir 'find'  || exit 1)"
posts="$(~/scripts/cmd/garf +dir 'posts' || exit 1)"

# Show post and read input
if [ "$1" = '-p' ] || [ "$1" = '--post' ]; then
    id="$2"
    if [ ! "$id" ]; then
        echo 'garf find: no post id given'
        exit 1
    fi

    # Show english if exists, else esperanto
    if [ -f "$posts/$id/english.png" ]; then
        post="$posts/$id/english.png"
    elif [ -f "$posts/$id/esperanto.png" ]; then
        post="$posts/$id/esperanto.png"
    else
        echo 'garf find: post does not exist with that id'
        exit 1
    fi

    echo 'Opening image...'
    feh "$post" --fullscreen

    printf 'Enter date (mm-dd): '
    read -r date
else
    date="$1"
fi

# Split values at dash
case "$date" in
    *-*)
        month="$(echo "$date" | cut -d '-' -f 1)"
        day="$(echo "$date" | cut -d '-' -f 2)"
        ;;
    *)
        echo 'garf find: date must be mm-dd'
        exit 1
        ;;
esac

if [ -z "$month" ]; then
    # Not given
    echo "garf find: date or post id not given"
    exit 1
elif [ ${#month} -eq 1 ]; then
    # 1 character - add zero to start
    month="0$month"
elif [ ${#month} -gt 2 ]; then
    # Greater than 2 characters long
    echo 'garf find: month argument should be 1-2 characters'
    exit 1
fi

if [ -z "$day" ]; then
    # Not given
    echo "garf find: day argument not given"
    exit 1
elif [ ${#day} -eq 1 ]; then
    # 1 character - add zero to start
    day="0$day"
elif [ ${#day} -gt 2 ]; then
    # Greater than 2 characters long
    echo 'garf find: day argument should be 1-2 characters'
    exit 1
fi

# Create out folder if it does not exist
if [ ! -d "$find" ]; then
    mkdir "$find"
fi

# Remove previous files in folder
if [ "$(ls -A "$find")" ]; then
    rm "$find/"*
fi

# Copy all files
# Loop works better with glob
for file in "$src"/*"-$month-$day.png"; do
    cp "$file" "$find/" || exit 1
done

# Open dolphin and ignore stdout/stderr
nohup dolphin "$find" >> /dev/null 2>&1

